class Solution {
public:
    int widthOfBinaryTree(TreeNode* root) {
        long ans = 0;
        queue<pair<TreeNode*,long>> q;
        q.push({root,0});
        while(!q.empty()){
            long size = q.size();
            long mini = q.front().second;
            long first,last;
            for(int i=0; i<size; i++){
                long cur = q.front().second - mini;
                TreeNode* node = q.front().first;
                q.pop();
                if(i==0) first = cur;
                if(i==size-1) last = cur;
                if(node->left){
                    q.push({node->left,(long)cur*2+1});
                }
                if(node->right){
                    q.push({node->right,(long)cur*2+2});
                }
            }
            ans = max(ans,last - first + 1);
        }
        return ans;
    }
};
